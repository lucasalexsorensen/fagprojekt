%% Welcome to SINDy
Threshold = 1; % Coefficent threshold
n = 2; % Poly-order
T = 30*60; % Max runtime
N = 100; % Max iterations

%% Data
x0 = [1.053 0.6551 0.5764];
t0 = 0;
t1 = 25;
t=t0:0.1:t1;
options = odeset('RelTol', 1e-4,'AbsTol', [1e-4 1e-4 1e-4]);
[T,Y] = ode15s(@pol,[t0 t1], x0, options);
% Noise
fp = Y(:,1);% + randn(381,1)./10;
cp = Y(:,2);% + randn(381,1)./10;
jp = Y(:,3);% + randn(381,1)./10;
Data = [fp cp jp];

%% Intialize
x0 = Data(1,:);
matrix = GenerateFunction(x0,n);
[m,n] = size(matrix);
NewTheta = ones(m,n);
Tslut = 86;
time = zeros(N);

%% loopy loop
for i=1:N
    tic
    ThetaMin = Minimization(NewTheta,Data,matrix,Tslut,x0);
    time(i) = toc;
    disp('Current run time =', sum(time));
    if (sum(time) >= T)
        break
    end
    
    val = sum(sum(ThetaMin));
    NewTheta = ThresholdsTheta(ThetaMin,Threshold);
    val2 = sum(sum(NewTheta));
    if (val == val2)
        break
    end
    yStore = DiskretOdeSolver(ThetaMin,matrix,Tslut,x0);
    Error(i) = LeastSquare(yStore,Data);
end

%% Plots
figure('Error');
plot(Error);
title('Leastsquare at each iteration');
xlabel('Iterations');
ylabel('Error');

figure('Approximated system');
plot3(Data(:,1),Data(:,2),Data(:,3),'r*');
hold on
plot3(yStore(:,1),yStore(:,2),yStore(:,3));
legend('data points','approximated system');
title('System generated by SINDy');
xlabel('x');
ylabel('y');
zlabel('z');

%% Output
syms x y z
mat2 = SYMGenerateFunction([x y z],3);
[a,b] = size(mat2);
matte = mat2.*ThetaMin;
h1 = vpa(simplify(matte(:,1)),3);
h2 = vpa(simplify(matte(:,2)),3);
h3 = vpa(simplify(matte(:,3)),3);

format short
disp('Ligning 1');
disp(h1);
disp('Ligning 2');
disp(h2);
disp('Ligning 3');
disp(h3);